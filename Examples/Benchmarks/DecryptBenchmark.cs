using System.Buffers.Text;
using System.Security.Cryptography;
using BenchmarkDotNet.Attributes;
using CPlayerLib.Player.Proto.Transfer;

namespace Benchmarks;

[MemoryDiagnoser]
public class DecryptBenchmark
{
    private const string _decryptSting =
        "CgYIABAAGAASywYI097gxrUwEAoZAAAAAAAA8D8gACq0BgoAEhRiNzQ5MzNjNGJkNmRiNmYzYzJjYhoQtTTXCZs0R2uvOVwnroekbyIzCgphcnRpc3RfdXJpEiVzcG90aWZ5OmFydGlzdDoyZVZsZ0x5M0F5bTA5Z00zZHF4NmNxIkkKD2ltYWdlX2xhcmdlX3VybBI2c3BvdGlmeTppbWFnZTphYjY3NjE2ZDAwMDBiMjczZmQzMTA4YzNkOTY0MTM0NDg5ZjRkYTlmIjgKEHBhZ2VfaW5zdGFuY2VfaWQSJEY5NkU2MzA0LUFCQzYtNEUyQi05QjRELTE3QkUzMThFOTg2NiIqCiBhY3Rpb25zLnNraXBwaW5nX25leHRfcGFzdF90cmFjaxIGcmVzdW1lIhUKDHRyYWNrX3BsYXllchIFYXVkaW8iMQoJYWxidW1fdXJpEiRzcG90aWZ5OmFsYnVtOjAzMWVudktaaVdVREQ5Y1JkYjBaYlgiMwoKZW50aXR5X3VyaRIlc3BvdGlmeTphcnRpc3Q6MmVWbGdMeTNBeW0wOWdNM2RxeDZjcSJJCg9pbWFnZV9zbWFsbF91cmwSNnNwb3RpZnk6aW1hZ2U6YWI2NzYxNmQwMDAwNDg1MWZkMzEwOGMzZDk2NDEzNDQ4OWY0ZGE5ZiI0Cgtjb250ZXh0X3VyaRIlc3BvdGlmeTphcnRpc3Q6MmVWbGdMeTNBeW0wOWdNM2RxeDZjcSIqCiBhY3Rpb25zLnNraXBwaW5nX3ByZXZfcGFzdF90cmFjaxIGcmVzdW1lIg4KCWl0ZXJhdGlvbhIBMCIdCgthbGJ1bV90aXRsZRIO7J2066y47IS4IDTsp5EiNgoOaW50ZXJhY3Rpb25faWQSJEI3MThFM0Q2LUZBQjItNDVCNS04MEY0LUVBQzQyOUU3MDA2OSJDCglpbWFnZV91cmwSNnNwb3RpZnk6aW1hZ2U6YWI2NzYxNmQwMDAwMWUwMmZkMzEwOGMzZDk2NDEzNDQ4OWY0ZGE5ZiJKChBpbWFnZV94bGFyZ2VfdXJsEjZzcG90aWZ5OmltYWdlOmFiNjc2MTZkMDAwMGIyNzNmZDMxMDhjM2Q5NjQxMzQ0ODlmNGRhOWYaxxUKYQoiY29tLnNwb3RpZnkuc2VydmljZS5mcmVldGllcmFydGlzdBIKOC43LjY2LjQzOBolc3BvdGlmeTphcnRpc3Q6MmVWbGdMeTNBeW0wOWdNM2RxeDZjcSIAKgRob21lMgAS9xMKJXNwb3RpZnk6YXJ0aXN0OjJlVmxnTHkzQXltMDlnTTNkcXg2Y3ESACIAKuIBCgASACIqCgASFGI3NDkzM2M0YmQ2ZGI2ZjNjMmNiGhC1NNcJmzRHa685XCeuh6RvIioKABIUZDJiNzU3ZGE2Y2Q2YzQxNTY5YzYaEH/hLA23aUk/pEYAiq0eCk8iKgoAEhRkYmM3ZGJhNTU5MjExMTlmNzAxYhoQieoea/WkQYKQHPh+jmiYyCIqCgASFGM0OWUwMGQ4MjU0ZmMzMzE2ZGNmGhBcVlu3QsVPDqGIDG496JOuIioKABIUYWVhNmFjMDM1ODE4MTBmZGViNjEaEFr0iV8gGk7zt0bIZuLCoqYoACriEQqfAmhtOi8vYXJ0aXN0cGxheWNvbnRleHQvdjEvcGFnZS9zcG90aWZ5L2FydGlzdC10b3AtdHJhY2tzLWV4dGVuc2lvbnMvMmVWbGdMeTNBeW0wOWdNM2RxeDZjcT9leGNsdWRlX3VyaT1zcG90aWZ5OnRyYWNrOjV2Vkw0NW5uY2N6S0NXUzB1SVFwek4sc3BvdGlmeTp0cmFjazozVGlWQ1BKckZpQnpwQXZlck9rUEwxLHNwb3RpZnk6dHJhY2s6NGNlV21LUlBlM1BHWHo0WnlFdDNsZSxzcG90aWZ5OnRyYWNrOjJPZUw3OGd5Q3ZtenhnVTJFTkhHQW0sc3BvdGlmeTp0cmFjazoyTEQzVTNJWTQzQjl3SVc3VjFERWlPEgAiKgoAEhQ4NjMwYzdlNjE3Mzk4NWJiZDA4ZhoQovjYRd1JRUe0KFMEustDbyIqCgASFDY1NjJmOTAyMmJmMDlmZDEwNzBhGhBg/pvARsROF4/u9e+Nq/AJIioKABIUN2VmYWE5ZGM2Njc0MmFhN2U0MTkaENU+Cd+ry0wxgzhMf0Kcb5YiKgoAEhRkNDhiYWEwNzBlN2U2MGUxNDBkMxoQaXKA06jFTse4G/J5i2V+mCIqCgASFDFlODkzYzcxYmI5M2U3M2UzNDA1GhCgRTqoTWJLNogwtzAxs91oIioKABIUN2UxMmFjNDNiNTI3ZWUzMzUxODIaEErFzXbk+EV7luopTnh0pzsiKgoAEhRjYzNh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";
    

    
    [Benchmark]
    public TransferState Old_String()
    {
        ReadOnlySpan<char> base64Data2 = _decryptSting;
        var maxLength = 
            System.Buffers.Text.Base64.GetMaxDecodedFromUtf8Length(base64Data2.Length);
        Span<byte> output = new byte[maxLength];
        Base64.TryFromBase64Chars(base64Data2, output, out var bytesWritten);
        var transferState =
            TransferState.Parser.ParseFrom(output[..bytesWritten]);
        return transferState;
    }

    [Benchmark]
    public TransferState Span()
    {
        //decode a base64 readonlyspan<char> to a readonlyspan<byte> using readonlyspan<char>
        var data_output = Convert.FromBase64String(_decryptSting);
        var transferState =
            TransferState.Parser.ParseFrom(data_output);
        return transferState;
    }
}
